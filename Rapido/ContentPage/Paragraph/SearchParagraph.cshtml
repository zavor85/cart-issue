@inherits Dynamicweb.Rendering.ViewModelTemplate<Dynamicweb.Frontend.ParagraphViewModel>
@using Dynamicweb.Frontend
@using Dynamicweb.Rapido.Blocks.Components
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components.Ecommerce

@Include("ParagraphBase.cshtml")
@Include("../../Components/EcommerceComponents.cshtml") 

@{
    int paragaphId = Model.ID;
    int productsPageId = GetPageIdByNavigationTag("ProductsPage");
    var contentSearchPageId = GetPageIdByNavigationTag("ContentSearchResults");
    var contentSearchFeedId = GetPageIdByNavigationTag("ContentSearchFeed");
    string cartIcon = Pageview.AreaSettings.GetItem("Layout").GetItem("Icons").GetList("CartIcon") != null ? Pageview.AreaSettings.GetItem("Layout").GetItem("Icons").GetList("CartIcon").SelectedValue : "fas fa-shopping-cart";
    string facebookPixelAction = "";
    bool pointShopOnly = Pageview.AreaSettings.GetItem("Ecommerce").GetBoolean("PointShopOnly");

    if (!string.IsNullOrWhiteSpace(Pageview.AreaSettings.GetItem("Settings").GetString("FacebookPixelID")))
    {
        facebookPixelAction = "document.getElementById('ExpressBuyProductSearchField" + paragaphId + "').value != '' ? fbq('track', 'AddToCart', {content_ids: [document.getElementById('ExpressBuyProductSearchField" + paragaphId + "').value], content_type: 'product'}) : '';";
    }
}

@if (Dynamicweb.Rapido.Services.User.IsBuyingAllowed())
{
    Search searchComponent = new Search
    {
        Id = "ExpressBuyProductSearch" + paragaphId,
        PageSize = 5,
        CssClass = "search--long"
    };

    var productSearchData = new SearchData();

    if (Model.Item.GetBoolean("EnableExpressBuy")) {
        productSearchData.SearchFeedUrl = "Default.aspx?ID=" + productsPageId + "&feed=true&feedType=productsOnly&ExpressBuy=true";
        productSearchData.ResultsTemplateId = "ExpressBuySearchContentTemplate" + paragaphId;
        productSearchData.ResultsPageUrl = "/Default.aspx?ID=" + productsPageId;
    } else {
        productSearchData.SearchFeedUrl = "Default.aspx?ID=" + productsPageId + "&feed=true&feedType=productsOnly&redirect=false&DoNotShowVariantsAsSingleProducts=True";
        productSearchData.ResultsTemplateId = "SearchProductsTemplate";
        productSearchData.ResultsPageUrl = "/Default.aspx?ID=" + productsPageId;
    }

    var contentSearchData = new SearchData
    {
        SearchFeedUrl = "Default.aspx?ID=" + contentSearchFeedId + "&Areaid=" + Pageview.Area.ID + "&pagesOnly=true",
        ResultsTemplateId = "SearchPagesTemplate",
        ResultsPageUrl = "/Default.aspx?ID=" + contentSearchPageId + "&Areaid=" + Pageview.Area.ID
    };

    switch (Model.Item.GetList("SearchIn").SelectedValue)
    {
        case "pages":
            searchComponent.SearchData = contentSearchData;
            searchComponent.ResultsPageUrl = "/Default.aspx?ID=" + contentSearchPageId + "&Areaid=" + Pageview.Area.ID;
            searchComponent.Placeholder = Translate("Search pages");
            break;
        case "products-and-pages":
            searchComponent.SearchData = productSearchData;
            searchComponent.SecondSearchData = contentSearchData;
            searchComponent.Placeholder = Translate("Search products or pages");
            searchComponent.ResultsPageUrl = "/Default.aspx?ID=" + productsPageId;
            break;
        default: //productSearch
            searchComponent.SearchData = productSearchData;
            searchComponent.Placeholder = Translate("Search products");
            searchComponent.ResultsPageUrl = "/Default.aspx?ID=" + productsPageId;
            break;
    }

    <div class="content-row__item__body dw-mod">
        @if (!string.IsNullOrEmpty(Model.Item.GetString("Title")) && !Model.Item.GetBoolean("HideTitle")) {
            <div class="grid__cell">
                @Render(new Heading { Title = Model.Item.GetString("Title"), Level = 2, CssClass = "u-no-margin" })
            </div>
        }

        <div id="expressSearch" class="grid grid--external-bleed-x">
            <div class="grid__col-auto">
               @Render(searchComponent)
            </div>
        </div>
    </div>

    <script id="ExpressBuySearchContentTemplate@(paragaphId)" type="text/x-template">
        {{#.}}
            {{#Product}}
                <li class="dropdown__item dropdown__item--seperator typeahead-search-result dw-mod" data-product-info="{{productInfo}}">
                    <div>
                        <div class="u-margin-right u-pull--left u-hidden-xs u-hidden-xxs {{noimage}}">
                            <img class="b-lazy" src="/Files/Images/placeholder.gif" data-src="/Admin/Public/GetImage.ashx?width=45&height=38&crop=1&Compression=75&image={{image}}" alt="{{name}}">
                        </div>
                        <div class="u-pull--left">
                            <div class="u-bold u-max-w340px u-truncate-text">{{name}}</div>
                            <div class="js-typeahead-name">{{number}}</div>
                            <div class="js-typeahead-result u-hidden">{{productId}}</div>
                            @if (pointShopOnly)
                            {
                                <text>
                                    {{#if havePointPrice}}
                                        <div>
                                            <span class="u-color--loyalty-points">{{points}}</span> @Translate("points")
                                        </div>
                                    {{else}}
                                        <small class="help-text u-no-margin">@Translate("Not available")</small>
                                    {{/if}}
                                    {{#unless canBePurchasedWithPoints}}
                                        {{#if havePointPrice}}
                                            <small class="help-text u-no-margin">@Translate("Not enough points to buy this")</small>
                                        {{/if}}
                                    {{/unless}}
                                </text>
                            }
                            else
                            {
                                <div>{{price}}</div>
                            }
                        </div>
                    </div>
                </li>
            {{/Product}}
        {{/.}}

        {{^.}}
            <li class="dropdown__item dropdown__item--seperator dropdown__item--not-selectable js-no-result dw-mod">
                @Translate("Your search gave 0 results")
            </li>
        {{/.}}
    </script>

    <script>
        let expressBuyButton = document.getElementById("ExpressBuyProductButton" + @paragaphId);
        let expressField = document.querySelector("#ExpressBuyProductSearch" + @paragaphId + " .search__field");
        let expressSearch = document.getElementById("ExpressBuyProductSearch" + @paragaphId);
        let expressQuantity = document.getElementById("ExpressBuyProductCount" + @paragaphId);

        expressSearch.addEventListener("resultSelected", function (data) {
            expressField.value = data.detail.selectedElement.querySelector(".js-typeahead-name").innerText;
            expressBuyButton.disabled = false;
            expressBuyButton.classList.remove("disabled");
            window.selectedResultId = expressField.value;
            window.selectedResultProductInfo = data.detail.selectedElement.getAttribute("data-product-info");
        });

        expressSearch.addEventListener("searchValueChanged", function () {
            expressBuyButton.disabled = true;
            expressBuyButton.classList.add("disabled");
        });

        function resetSearch() {
            expressField.value = "";
            expressQuantity.value = 1;
            expressBuyButton.disabled = true;
            expressBuyButton.classList.add("disabled");
        }
    </script>
}
