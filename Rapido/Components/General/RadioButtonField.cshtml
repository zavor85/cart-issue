@using System.Reflection
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components

@* Component *@

@helper RenderRadioButtonField(RadioButtonField settings)
{
    var attributes = new Dictionary<string, string>();
    if (!string.IsNullOrEmpty(settings.Label) && string.IsNullOrEmpty(settings.Id)) 
    {
        settings.Id = Guid.NewGuid().ToString("N");
    }

    /*base settings*/
    if (!string.IsNullOrEmpty(settings.Id)) { attributes.Add("id", settings.Id); }
    if (!string.IsNullOrEmpty(settings.OnClick)) { attributes.Add("onclick", settings.OnClick); }
    if (!string.IsNullOrEmpty(settings.OnChange)) { attributes.Add("onchange", settings.OnChange); }
    if (settings.Disabled) { attributes.Add("disabled", "true"); }
    if (settings.Required) { attributes.Add("required", "true"); }
    if (!string.IsNullOrEmpty(settings.Name)) { attributes.Add("name", settings.Name); }
    /*end*/
    
    attributes.Add("type", "radio");
    if (settings.Checked) { attributes.Add("checked", "true"); }
    settings.CssClass = "form__control " + settings.CssClass;
    if (settings.Value != null) { attributes.Add("value", settings.Value); }

    var resultAttributes = attributes.Concat(settings.ExtraAttributes).GroupBy(d => d.Key).ToDictionary (d => d.Key, d => d.Last().Value);

    <div class="form__field-group @settings.WrapperCssClass dw-mod">
        <input @ComponentMethods.AddAttributes(resultAttributes) class="@settings.CssClass dw-mod" />
        @if (!string.IsNullOrEmpty(settings.Label))
        {
            <label for="@settings.Id" class="dw-mod">@settings.Label</label>
        }
        @if (!string.IsNullOrEmpty(settings.HelpText))
        {
            <small class="form__help-text">@settings.HelpText</small>
        }
        @Render(new NotificationMessage { Message = settings.ErrorMessage })
    </div>
}