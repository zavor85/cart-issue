@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components
@using Dynamicweb.Rapido.Blocks
@using System.IO


@functions {
    BlocksPage passwordRecoveryPage = BlocksPage.GetBlockPage("PasswordRecovery");
    string pageId;
}

@{
    pageId = GetGlobalValue("Global:Page.ID");

    Block main = new Block
    {
        Id = "PasswordRecoveryMain",
        SortId = 20
    };

    if (GetString("UserManagement:User.Login.Action") == "Recovery")
    {
        main.Template = RenderPasswordRecovery();
    }

    if (GetString("UserManagement:User.Login.Action") == "RecoveryLinkSent")
    {
        main.Template = RenderRecoveryLinkSent();
    }

    if (GetString("UserManagement:User.Login.Action") == "PasswordSent")
    {
        main.Template = RenderPasswordSent(); 
    }

    if (GetString("UserManagement:User.Login.Action") == "NewPasswordForm")
    {
        if (GetBoolean("UserManagement:User.Login.RecoveryToken.FoundUser"))
        {
            if (GetBoolean("UserManagement:User.Login.RecoveryToken.OutOfDate"))
            {
                main.Template = RenderOutOfDate();
            }
            else
            {
                main.Template = RenderGetNewPassword();
            }
        }
        else
        {
            main.Template = RenderSomethingWentWrong();
        }
    }

    if (GetString("UserManagement:User.Login.Action") == "PasswordChanged")
    {
        main.Template = RenderPasswordChanged();
    }

    passwordRecoveryPage.Add(main);
}

@helper RenderPasswordRecovery() {
    @Render(new Heading { Title = Translate("Forgot your password?"), Level = 2, CssClass = "u-margin-bottom--lg" });

    Form form = new Form { Action = "/Default.aspx?ID=" + pageId, Method = FormMethod.Post };

    form.Add(new HiddenField { Name = "ForgotPasswordMailTemplate", Value = GetString("UserManagement:User.Login.EmailTemplate") });
    form.Add(new HiddenField { Name = "ForgotPasswordSenderEmail", Value = GetString("UserManagement:User.Login.EmailSender") });
    form.Add(new HiddenField { Name = "ForgotPasswordMailSubject", Value = GetString("UserManagement:User.Login.EmailSubject") });
    form.Add(new HiddenField { Name = "LoginAction", Value = "Recovery" });
    form.Add(new NotificationMessage
    {
        MessageType = NotificationMessageType.Info,
        CssClass = "u-margin-bottom--lg",
        Message = Translate("Don't worry. Enter your email address below and we'll send you password reset instructions."),
    });

    if (!string.IsNullOrWhiteSpace(GetString("UserManagement:User.Login.FoundUsersCount")))
    {
        if (GetInteger("UserManagement:User.Login.FoundUsersCount") == 0 || GetInteger("UserManagement:User.Login.FoundUsersCount") > 1)
        {
            form.Add(new NotificationMessage
            {
                MessageType = NotificationMessageType.Error,
                MessageLayout = NotificationMessageLayout.Box,
                CssClass = "u-margin-bottom--lg",
                Message = Translate("Sorry, we didn't recognize that email address. Want to try another?")
            });
        }
    }

    foreach (LoopItem loginField in GetLoop("UserManagement:User.Login.Fields"))
    {
        form.Add(new TextField
        {
            Id = loginField.GetString("Field.Name"),
            Name = loginField.GetString("Field.Name"),
            Label = loginField.GetString("Field.Title"),
            Placeholder = loginField.GetString("Field.Title"),
            ErrorMessage = loginField.GetString("Field.Error"),
            Required = true
        });
    }

    form.Add(new Button { ButtonType = ButtonType.Submit, Title = Translate("Email me reset instructions"), OnClick = "Buttons.LockButton(event)", CssClass = "u-full-width" });

    form.Add(new Text { Content = "<div class=\"u-border-top u-full-width u-margin-bottom--lg\"></div>" });
    form.Add(new Button { ButtonType = ButtonType.Button, ButtonLayout = ButtonLayout.LinkClean, Title = Translate("Nevermind, back to sign in"), OnClick = "window.history.back()", CssClass = "u-full-width" });

    @Render(form)
}

@helper RenderGetNewPassword() {
    @Render(new Heading { Title = Translate("Change password"), Level = 2, CssClass = "u-margin-bottom--lg" });
    @Render(new Text { Content = Translate("Please enter your new password and confirm it.") });

    Form form = new Form { Action = "/Default.aspx?ID=" + pageId, Method = FormMethod.Post };

    form.Add(new NotificationMessage
    {
        MessageType = NotificationMessageType.Warning,
        MessageLayout = NotificationMessageLayout.Box,
        CssClass = "u-margin-bottom--lg",
        Message = Translate("Notice!") + " " + Translate("A strong password is a combination of letters and punctuation marks")
    });

    form.Add(new HiddenField { Name = "RecoveryToken", Value = GetString("UserManagement:User.Login.RecoveryToken") });
    form.Add(new HiddenField { Name = "ForgotPasswordMailTemplate", Value = GetString("UserManagement:User.Login.EmailTemplate") });
    form.Add(new HiddenField { Name = "ForgotPasswordSenderEmail", Value = GetString("UserManagement:User.Login.EmailSender") });
    form.Add(new HiddenField { Name = "ForgotPasswordMailSubject", Value = GetString("UserManagement:User.Login.EmailSubject") });
    form.Add(new HiddenField { Name = "LoginAction", Value = "ChangePassword" });

    form.Add(new TextField
    {
        Id = GetString("UserManagement:User.Login.Field.NewPassword.Name"),
        Name = GetString("UserManagement:User.Login.Field.NewPassword.Name"),
        Type = TextFieldType.Password,
        Label = Translate("New password"),
        ErrorMessage = GetString("UserManagement:User.Login.Field.NewPassword.Error"),
        Required = true
    });

    form.Add(new TextField
    {
        Id = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Name"),
        Name = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Name"),
        Type = TextFieldType.Password,
        Label = Translate("Re-enter your new password"),
        ErrorMessage = GetString("UserManagement:User.Login.Field.NewPasswordConfirm.Error"),
        Required = true
    });

    form.Add(new Button { ButtonType = ButtonType.Submit, Title = Translate("Change password"), CssClass = "u-full-width u-no-margin" });

    @Render(form)
}

@helper RenderRecoveryLinkSent() {
    @Render(new Heading { Title = Translate("Please check your email"), Level = 2, CssClass = "u-margin-bottom--lg" });
    @Render(new NotificationMessage { 
        Message = "<div>" + Translate("If the email address is registered with an account, you'll receive a password reset link") + ".<br /><br /><strong>" + Translate("If you don't see your reset email") + "</strong>, " +  Translate("be sure to check your spam filter") + ".</div>", 
        MessageType = NotificationMessageType.Success,
        MessageLayout = NotificationMessageLayout.Box,
        Icon = new Icon {
            Prefix = "fal",
            Name = "fa-paper-plane",
            LabelPosition = IconLabelPosition.After   
        }
    })
}

@helper RenderPasswordSent() {
    @Render(new Heading { Title = Translate("Please check your email"), Level = 2, CssClass = "u-margin-bottom--lg" });
    @Render(new NotificationMessage { 
        Message = Translate("Check your email - we sent you an email with the password."), 
        MessageType = NotificationMessageType.Success,
        MessageLayout = NotificationMessageLayout.Box,
        Icon = new Icon {
            Prefix = "fal",
            Name = "fa-paper-plane",
            LabelPosition = IconLabelPosition.After   
        }
    })
}

@helper RenderOutOfDate() {
    @Render(new Heading { Title = Translate("Chaneg password"), Level = 2, CssClass = "u-margin-bottom--lg" });
    @Render(new NotificationMessage
    {
        MessageType = NotificationMessageType.Error,
        MessageLayout = NotificationMessageLayout.Box,
        CssClass = "u-margin-bottom--lg",
        Message = Translate("The recovery password link is out of date.") + " " +
                    Translate("Try to recover the password") +
                    Render(new Link { Href = "/Default.aspx?ID=" + pageId, Title = Translate("again"), ButtonLayout = ButtonLayout.None }) + "."
    })
}

@helper RenderPasswordChanged() {
    @Render(new Heading { Title = Translate("Change password"), Level = 2, CssClass = "u-margin-bottom--lg" });  
    @Render(new NotificationMessage { 
        Message = Translate("Success. Your password has been changed."), 
        MessageType = NotificationMessageType.Success,
        MessageLayout = NotificationMessageLayout.Box,
        Icon = new Icon {
            Prefix = "fal",
            Name = "fa-check-circle",
            LabelPosition = IconLabelPosition.After   
        },
        CssClass = "u-margin-bottom--lg"
    })

    @Render(new Button { Title = Translate("Sign in"), OnClick = "document.getElementById('SignInModalTrigger').checked = true; setTimeout(function () { document.getElementById('LoginUsername').focus() }, 10)", ButtonLayout = ButtonLayout.Primary, CssClass = "u-full-width u-no-margin" })
}

@helper RenderSomethingWentWrong() { 
    @Render(new Heading { Title = Translate("Error"), Level = 2, CssClass = "u-margin-bottom--lg" });  
    @Render(new NotificationMessage
    {
        MessageType = NotificationMessageType.Error,
        MessageLayout = NotificationMessageLayout.Box,
        CssClass = "u-margin-bottom--lg",
        Message = Translate("Something went wrong.") + " " +
        Translate("Try recover password") +
        Render(new Link { Href = "/Default.aspx?ID=" + pageId, Title = Translate("again"), ButtonLayout = ButtonLayout.None }) + "."
    })                                                                                                   
}


@Include("Blocks/Custom__Blocks.cshtml")

@Include("../../Components/GridBuilder.cshtml")
@Include("../../Components/GeneralComponents.cshtml")


@RenderBlockList(passwordRecoveryPage.BlocksRoot.BlocksList)

