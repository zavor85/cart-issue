@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Core
@using System
@using System.Web
@using System.Collections.Generic
@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Rapido.Blocks.Components.General

@functions {
    BlocksPage productGeneratePDFPage = BlocksPage.GetBlockPage("Product");
}

@{
    string generatePDFLayout = !String.IsNullOrEmpty(Pageview.AreaSettings.GetItem("ProductPage").GetString("GeneratePDFLayout")) ? Pageview.AreaSettings.GetItem("ProductPage").GetList("GeneratePDFLayout").SelectedValue : "Section";
    generatePDFLayout = generatePDFLayout == "Ribbon" ? "Section" : generatePDFLayout;

    if (GetPageIdByNavigationTag("ProductPagePDFTemplates") > 0 && generatePDFLayout != "hide")
    {
        Block generatePDFBlock = new Block()
        {
            Name = generatePDFLayout != "MainInformation" ? Translate("Generate PDF") : "",
            Id = "GeneratePDF",
            SortId = 10,
            Template = RenderGeneratePDF(generatePDFLayout),
            Design = new Design
            {
                Size = "12",
                RenderType = RenderType.Column,
                HidePadding = true
            }
        };

        productGeneratePDFPage.Add(generatePDFLayout, generatePDFBlock);
    }
}

@helper RenderGeneratePDF(string layout)
{
    string ribbonClasses = Pageview.AreaSettings.GetItem("ProductPage").GetList("GeneratePDFLayout").SelectedValue == "Ribbon" ? "product__section--ribbon paragraph-container paragraph-container--full-width" : "";
    ribbonClasses = layout == "Tabs" ? "" : ribbonClasses;
    string ribbonSubClasses = Pageview.AreaSettings.GetItem("ProductPage").GetList("GeneratePDFLayout").SelectedValue == "Ribbon" ? "center-container--ribbon" : "";
    string exportPageId = GetPageIdByNavigationTag("ProductExportFeed").ToString();
    int pdfFolderId = GetPageIdByNavigationTag("ProductPagePDFTemplates");

    Form form = new Form { Action = "/Default.aspx?MainProductID=" + System.Web.HttpContext.Current.Request.QueryString.Get("ProductID") + "&VariantID=" + System.Web.HttpContext.Current.Request.QueryString.Get("VariantID") + "&Pdf=true", Method = FormMethod.Post, CssClass = "u-no-margin" };
    form.Add(new HiddenField { Name = "siteUrl", Value = string.Format("{0}://{1}", GetGlobalValue("Global:Request.Scheme"), GetGlobalValue("Global:Request.Host")) });

    //Select languages
    SelectField languagesList = new SelectField
    {
        Id = "RequestLanguageID",
        Name = "RequestLanguageID",
        Label = Translate("Language"),
        CssClass = "u-full-width"
    };

    foreach (var lang in Services.Languages.GetLanguages().OrderBy(l => l.Name))
    {
        languagesList.Options.Add(new SelectFieldOption
        {
            Label = lang.Name,
            Value = lang.LanguageId,
            Checked = lang.IsDefault ? true : false
        });
    }
    form.Add(languagesList);

    //Select pages
    SelectField pagesList = new SelectField
    {
        Id = "PDFTemplate",
        Name = "ID",
        Label = Translate("Generate PDF"),
        CssClass = "u-full-width"
    };

    foreach (Dynamicweb.Content.Page page in ServiceLocator.Current.GetPageService().GetPagesByParentID(pdfFolderId))
    {
        pagesList.Options.Add(new SelectFieldOption
        {
            Label = page.MenuText,
            Value = Converter.ToString(page.ID)
        });
    }
    form.Add(pagesList);

    form.Add(new Button { ButtonType = ButtonType.Submit, Title = Translate("Generate PDF"), CssClass = "btn--full u-no-margin" });

    <div class="product__section @ribbonClasses grid dw-mod">
        <div class="dw-mod grid__col-md-4 @ribbonSubClasses">
            @if (layout == "Section")
            {
                @Render(new Heading { Title = Translate("Generate PDF"), Level = 2 })
            }
            @Render(form)
        </div>
    </div>
}
