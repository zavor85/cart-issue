@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using Dynamicweb.Core
@using System
@using System.Web
@using System.Collections.Generic
@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Ecommerce.Orders

@{
    bool useGoogleTagManager = !string.IsNullOrEmpty(Pageview.AreaSettings.GetItem("Settings").GetString("GoogleTagManagerID"));

    BlocksPage googleImpressionsPage = BlocksPage.GetBlockPage("CheckoutPage");

    Block googleImpressionsBlock = new Block()
    {
        Id = "GoogleImpressionsBlock",
        SortId = 10,
        Template = RenderScript()
    };

    if (useGoogleTagManager)
    {
        googleImpressionsPage.Add("CheckoutBottomSnippets", googleImpressionsBlock);
    }
}

@helper RenderScript()
{
    var currentStep = 1;

    foreach (LoopItem step in GetLoop("StepButtons"))
    {
        if (step.GetBoolean("Step.Current"))
        {
            currentStep = step.GetInteger("Step.Number");
            break;
        }
    }
    <script>
        dataLayer.push({
            "event": "checkout",
            "ecommerce": {
                "currencyCode": "@Pageview.Area.EcomCurrencyId",
                "checkout": {
                    "actionField": {"step": @currentStep},
                    "products": [
                        @foreach (LoopItem orderline in GetLoop("OrderLines").Where(o => o.GetBoolean("Ecom:Order:OrderLine.IsProduct") == true).ToList())
                        {
                            var groupObject = Dynamicweb.Ecommerce.Services.ProductGroups.GetGroup(orderline.GetString("Ecom:Product.PrimaryOrFirstGroupID"));
                            <text>
                            {
                                "name": "@orderline.GetString("Ecom:Order:OrderLine.ProductName")",
                                "id": "@orderline.GetString("Ecom:Product.ID")",
                                "price": "@orderline.GetDouble("Ecom:Order:OrderLine.UnitPrice.Price")",
                                "brand": "@orderline.GetString("Ecom:Product:Field.brand.Value")",
                                "category": "@(groupObject != null ? groupObject.Name : "")",
                                "variant": "@orderline.GetString("Ecom:Order:OrderLine.ProductVariantID")",
                                "quantity": @orderline.GetInteger("Ecom:Order:OrderLine.Quantity")
                            },
                            </text>
                        }
                    ]
                }
            }
        });
    </script>
}