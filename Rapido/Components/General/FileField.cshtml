@using System.Reflection
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components

@* Component *@

@helper RenderFileField(FileField settings)
{
    var attributes = new Dictionary<string, string>();
    if (string.IsNullOrEmpty(settings.Id)) 
    {
        settings.Id = Guid.NewGuid().ToString("N");
    }
    
    if (!string.IsNullOrEmpty(settings.Id)) { attributes.Add("id", settings.Id); }
    if (settings.Disabled) { attributes.Add("disabled", "true"); }
    if (settings.Required) { attributes.Add("required", "true"); }
    if (settings.Multiple) { attributes.Add("multiple", "true"); }
    if (!string.IsNullOrEmpty(settings.Name)) { attributes.Add("name", settings.Name); }
    if (string.IsNullOrEmpty(settings.ChooseFileText)) 
    { 
        settings.ChooseFileText = Translate("Choose file");
    }
    if (string.IsNullOrEmpty(settings.NoFilesChosenText)) 
    { 
        settings.NoFilesChosenText = Translate("No files chosen...");
    }
    if (!string.IsNullOrEmpty(settings.OnClick)) { attributes.Add("onclick", settings.OnClick); }

    if (settings.Required && !String.IsNullOrEmpty(settings.Label)) { settings.Label += " <span class=\"required dw-mod\">*</span>"; }

    string setValueToFakeInput = "FileUpload.setValueToFakeInput(this)";
    attributes.Add("onchange", setValueToFakeInput + (!string.IsNullOrEmpty(settings.OnChange) ? settings.OnChange : ""));

    attributes.Add("type", "file");
    if (settings.Value != null) { attributes.Add("value", settings.Value); }
    settings.CssClass = "u-full-width " + settings.CssClass;

    var resultAttributes = attributes.Concat(settings.ExtraAttributes).GroupBy(d => d.Key).ToDictionary (d => d.Key, d => d.Last().Value);

    <div class="form__field-group u-full-width @settings.WrapperCssClass dw-mod">
        @if (!string.IsNullOrEmpty(settings.Label) || settings.Link != null )
        {
            <div class="u-full-width"> 
                @if (!string.IsNullOrEmpty(settings.Label)) { <label for="@settings.Id" class="u-pull--left">@settings.Label</label> }
                @if (settings.Link != null) {
                    <div class="u-pull--right">
                        @{ settings.Link.ButtonLayout = ButtonLayout.LinkClean; }
                        @Render(settings.Link)
                    </div>
                }
            </div>
            
        }

        @if (!string.IsNullOrEmpty(settings.HelpText))
        {
            <small class="form__help-text">@settings.HelpText</small>
        }

        <div class="form__field-combi file-input u-no-margin dw-mod">
            <input @ComponentMethods.AddAttributes(resultAttributes) class="file-input__real-input" data-no-files-text="@settings.NoFilesChosenText" data-many-files-text="@Translate("files")" />
            <label for="@settings.Id" class="file-input__btn btn--secondary btn dw-mod">@settings.ChooseFileText</label>
            <label for="@settings.Id" class="@settings.CssClass file-input__fake-input js-fake-input dw-mod">@settings.NoFilesChosenText</label>
            @if (settings.UploadButton != null)
            {
                settings.UploadButton.CssClass += " btn--condensed u-no-margin";
                @Render(settings.UploadButton)
            }
        </div>
        @Render(new NotificationMessage { Message = settings.ErrorMessage })
    </div>
}