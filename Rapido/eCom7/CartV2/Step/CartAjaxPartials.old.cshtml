@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>
@using System.Text.RegularExpressions
@using System.Linq
@using Dynamicweb.Core
@using Dynamicweb.Ecommerce.Orders
@using System
@using System.Web

@{
    string[] targets = HttpContext.Current.Request.QueryString["target"] != null ? HttpContext.Current.Request.QueryString["target"].Split(',') : null;

    if (targets != null) {

        foreach (string target in targets) {

            if ( target == "ParcelShop" ) {
                string markup = "";

                foreach ( LoopItem shipping in GetLoop("Shippingmethods") ) {

                    if ( shipping.GetString("Ecom:Cart.Shippingmethod.IsSelected") == "true" ) {
                        markup = shipping.GetString("Ecom:ShippingProvider.Content");
                    }

                }

                @markup
            }

            if ( target == "Parcel" ) {
                <div data-template="Parcel">
                    @RenderParcelShop()
                </div>
            }
    
            if ( target == "Summary" ) {
                <div data-template="Summary">
                    @RenderOrderSummary()
                </div>
            }

            if ( target == "Shipping" ) {
                <div data-template="Shipping">
                    @RenderShippingMethods()
                </div>
            }

            if ( target == "Payment" ) {
                <div data-template="Payment">
                    @RenderPaymentMethods()
                </div>
            }

            if ( target == "Addresses" ) {
                <div data-template="Addresses">
                    @RenderAddresses()
                </div>
            }

            if ( target == "BillingRegions" ) {
                <div data-template="BillingRegions">
                    @RenderBillingRegions()
                </div>
            }

            if ( target == "DeliveryRegions" ) {
                <div data-template="DeliveryRegions">
                    @RenderDeliveryRegions()
                </div>
            }
            

            // Set selected address, from predefined options useraddresses
            // Passes 'UserManagementUserUserAddressSelectedAddressID', so the correct data can be accessed
            if ( target == "DeliveryAddressModal" ) {
                @RenderReadOnlyShippingAddress()
            }

        }
    }
}

@Include("../../../Components/GridBuilder.cshtml")
@Include("../../../Components/GeneralComponents.cshtml")


@Include("OnepageItems/BillingAndShipping.cshtml")
@Include("OnepageItems/OrderSummary.cshtml")
@Include("OnepageItems/ShippingMethods.cshtml")
@Include("OnepageItems/ParcelShop.cshtml")
@Include("OnepageItems/PaymentMethods.cshtml")