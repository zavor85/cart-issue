@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components

@functions {
     BlocksPage addCommentPage = BlocksPage.GetBlockPage("RMADetails");
}

@{
    Modal modal = new Modal
    {
        Id = "AddCustomerComment",
        Heading = new Heading
        {
            Level = 2,
            Title = Translate("Error")
        },
        Width = ModalWidth.Xs,
        BodyText = Translate("Please specify customer comment")
    };

    modal.AddAction(new Button
    {
        ButtonType = ButtonType.Button,
        Title = Translate("Close"),
        OnClick = "document.getElementById('AddCustomerCommentModalTrigger').checked = false",
        CssClass = "btn--full"
    });

    Block addComment = new Block
    {
        Id = "AddCommentButtonsContainer",
        SortId = 50,
        BlocksList = new List<Block> {
            new Block
            {
                Id = "AddCommentButton",
                SortId = 10,
                Component = new Button { ButtonType = ButtonType.Submit, CssClass = "btn--condensed u-margin-bottom--lg", Title = Translate("Add comment") }
            }
        }
    };

    Block addCommentModal = new Block
    {
        Id = "AddCommentModal",
        SortId = 20,
        Component = modal
    };
    addComment.Add(addCommentModal);

    if (!GetBoolean("Ecom:CustomerCenter.RMA.HasAddContent") && string.IsNullOrEmpty(HttpContext.Current.Request[GetString("ParagraphID") + "RMAOrderID"])
        && !GetBoolean("Ecom:CustomerCenter.RMA.HasCancelContent") && GetBoolean("Ecom:CustomerCenter.RMA.HasAddComment"))
    {
        addCommentPage.Add("RmaDetailsForm", addComment);
    }
}