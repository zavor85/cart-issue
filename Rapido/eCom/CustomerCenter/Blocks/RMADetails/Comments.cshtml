@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components

@functions {
     BlocksPage commentsPage = BlocksPage.GetBlockPage("RMADetails");
}

@{
    Block comments = new Block
    {
        Id = "Comments",
        SortId = 60,
        BlocksList = new List<Block> {
            new Block {
                Id = "CommentsTitle",
                SortId = 10,
                Component = new Heading { Title = Translate("History"), CssClass = "u-margin-top--lg" }
            },
            new Block {
                Id = "CommentsList",
                SortId = 20,
                Template = RenderComments()
            }
        }
    };

    if (string.IsNullOrWhiteSpace(GetString("Ecom:CustomerCenter.RMA.HasAddContent"))) {
        commentsPage.Add("RmaDetailsForm", comments);
    }
}

@helper RenderComments()
{
    var RMACreated = GetLoop("RMAComments").FirstOrDefault((comment) => comment.GetString("Ecom:RMA:Comment.Event.Description") == "RMA Created.");

    foreach (LoopItem comment in GetLoop("RMAComments"))
    {
        if (comment.GetString("Ecom:RMA:Comment.Event.Description") != "RMA Created.")
        {
            @RenderComment(comment)
        }
    }

    if (RMACreated != null)
    {
        @RenderComment(RMACreated)
    }
}

@helper RenderComment(LoopItem comment)
{
    string date = comment.GetDate("Ecom:RMA:Comment.Date").ToString(Pageview.Area.Dateformat + " HH:mm");
    string description = comment.GetString("Ecom:RMA:Comment.Event.Description");
    string name = comment.GetString("Ecom:RMA:Comment.State.Name");
    string text = comment.GetString("Ecom:RMA:Comment.Text");

    <div class="grid__col-md-12 media-list-item dw-mod u-no-padding-x">
        <div class="grid__cell">
            <div class="media-list-item__header dw-mod">
                <small>@date</small>
            </div>
            @if (!string.IsNullOrWhiteSpace(description))
            {
                <div class="u-bold">@description</div>
            }

            @if (!string.IsNullOrWhiteSpace(name))
            {
                <div>@name</div>
            }

            @if (!string.IsNullOrEmpty(text))
            {
                <div>@text</div>
            }
        </div>
    </div>
}