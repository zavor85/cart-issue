@inherits Dynamicweb.Rendering.RazorTemplateBase<Dynamicweb.Rendering.RazorTemplateModel<Dynamicweb.Rendering.Template>>

@using Dynamicweb.Rapido.Blocks
@using Dynamicweb.Rapido.Blocks.Components.General
@using Dynamicweb.Rapido.Blocks.Components

@functions {
    BlocksPage headerPage = BlocksPage.GetBlockPage("RecurringOrderDetails");
}

@{
    Block header = new Block
    {
        Id = "Header",
        SortId = 10,
        Design = new Design
        {
            CssClass = "u-clearfix"
        },
        BlocksList = new List<Block> {
            new Block
            {
                Id = "HeaderTitle",
                SortId = 10,
                Design = new Design {
                    CssClass = "u-pull--left"
                },
                Component = new Heading
                {
                    Title = GetGlobalValue("Global:Page.Name"),
                    Icon = new Icon { Prefix = "fas", Name = "fa-calendar", LabelPosition = IconLabelPosition.After }
                }
            },
            new Block
            {
                Id = "HeaderActions",
                SortId = 20,
                Design = new Design {
                    CssClass = "u-pull--right"
                },
                Template = RenderHeaderActions()
            }
        }
    };

    headerPage.Add("PageContainer", header);
}

@helper RenderHeaderActions() {

    string currentView = GetString("Ecom:CustomerCenter.RecurringOrderDetails.CurrentView");
    bool isPrevious = currentView == "previous";

    if (!string.IsNullOrEmpty(GetString("Ecom:CustomerCenter.RecurringOrder.PreviousRecurringOrdersURL")))
    {
        @Render(new Link { Href = GetString("Ecom:CustomerCenter.RecurringOrder.PreviousRecurringOrdersURL"), ButtonLayout = ButtonLayout.Secondary, Title = Translate("Previous deliveries"), CssClass = isPrevious ? "btn--active" : "" })
        <span class="btn btn--secondary btn--condensed dw-mod @(!isPrevious ? "btn--active" : "")">@Translate("Future deliveries")</span>
    }
    if (!string.IsNullOrEmpty(GetString("Ecom:CustomerCenter.RecurringOrder.FutureDeliveriesURL")))
    {
        <span class="btn btn--secondary btn--condensed dw-mod @(isPrevious ? "btn--active" : "")">@Translate("Previous deliveries")</span>
        @Render(new Link { Href = GetString("Ecom:CustomerCenter.RecurringOrder.FutureDeliveriesURL"), ButtonLayout = ButtonLayout.Secondary, Title = Translate("Future deliveries"), CssClass = !isPrevious ? "btn--active" : "" })
    }
}